{"ast":null,"code":"var _jsxFileName = \"/Users/diachun/WebstormProjects/websocket-reactjs-rtk-messenger/Client/src/WebSock.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebSock = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [value, setValue] = useState('');\n  const [connected, setConnected] = useState(false);\n  const [username, setUsername] = useState('');\n  const socket = useRef();\n  const connect = () => {\n    socket.current = new WebSocket('ws://localhost:5001');\n    console.log(socket);\n    socket.current.onopen = () => {\n      const message = {\n        event: 'connection',\n        username,\n        id: Date.now()\n      };\n      socket.current.send(JSON.stringify(message));\n      setConnected(true);\n      console.log('Connected');\n    };\n    socket.current.onmessage = event => {\n      const message = JSON.parse(event.data);\n      setMessages(prev => [message, ...prev]);\n    };\n    socket.current.onclose = () => {\n      console.log('Socket close');\n    };\n    socket.current.onerror = () => {\n      console.log('Socket error');\n    };\n  };\n  const sendMessage = async () => {\n    await axios.post('http://localhost:5001/new-messages', {\n      message: value,\n      id: Date.now()\n    });\n  };\n  if (!connected) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          type: \"text\",\n          placeholder: \"Enter name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: connect,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: value,\n          onChange: e => setValue(e.target.value),\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: messages.map(mess => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: mess.event === 'connection' ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"connection_message\",\n            children: [\"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C \", mess.username, \" \\u043F\\u043E\\u0434\\u043A\\u043B\\u044E\\u0447\\u0438\\u043B\\u0441\\u044F\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 35\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            children: [mess.username, \". \", mess.message]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 35\n          }, this)\n        }, mess.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(WebSock, \"wOdxozi8FvE/MmPGd9ljt6uI4kg=\");\n_c = WebSock;\nexport default WebSock;\nvar _c;\n$RefreshReg$(_c, \"WebSock\");","map":{"version":3,"names":["React","useRef","useState","axios","jsxDEV","_jsxDEV","WebSock","_s","messages","setMessages","value","setValue","connected","setConnected","username","setUsername","socket","connect","current","WebSocket","console","log","onopen","message","event","id","Date","now","send","JSON","stringify","onmessage","parse","data","prev","onclose","onerror","sendMessage","post","className","children","onChange","e","target","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","mess","_c","$RefreshReg$"],"sources":["/Users/diachun/WebstormProjects/websocket-reactjs-rtk-messenger/Client/src/WebSock.jsx"],"sourcesContent":["import React, {useRef, useState} from 'react';\nimport axios from 'axios';\n\nconst WebSock = () => {\n\n    const [messages, setMessages] = useState([])\n    const [value, setValue] = useState('')\n    const [connected, setConnected] = useState(false)\n    const [username, setUsername] = useState('')\n    const socket = useRef()\n\n    const connect = () => {\n        socket.current = new WebSocket('ws://localhost:5001')\n        console.log(socket)\n        socket.current.onopen = () => {\n            const message = {\n                event: 'connection',\n                username,\n                id: Date.now()\n            }\n            socket.current.send(JSON.stringify(message))\n            setConnected(true)\n            console.log('Connected')\n        }\n        socket.current.onmessage = (event) => {\n            const message = JSON.parse(event.data)\n            setMessages(prev => [message, ...prev])\n        }\n        socket.current.onclose = () => {\n            console.log('Socket close')\n        }\n        socket.current.onerror = () => {\n            console.log('Socket error')\n        }\n    }\n\n    const sendMessage = async () => {\n        await axios.post('http://localhost:5001/new-messages', {\n            message: value,\n            id: Date.now()\n        })\n    }\n\n    if (!connected) {\n        return (\n            <div className='center'>\n                <div className=\"form\">\n                    <input\n                        value={username}\n                        onChange={e => setUsername(e.target.value)}\n                        type=\"text\"\n                        placeholder=\"Enter name\"/>\n                    <button onClick={connect}>Login</button>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"center\">\n            <div>\n                <div className=\"form\">\n                    <input value={value} onChange={e => setValue(e.target.value)} type=\"text\"/>\n                    <button onClick={sendMessage}>Отправить</button>\n                </div>\n                <div className=\"messages\">\n                    {messages.map(mess =>\n                        <div key={mess.id}>\n                            {mess.event === 'connection'\n                                ? <div className=\"connection_message\">\n                                    Пользователь {mess.username} подключился\n                                </div>\n                                : <div className=\"message\">\n                                    {mess.username}. {mess.message}\n                                </div>\n                            }\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default WebSock;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,MAAM,EAAEC,QAAQ,QAAO,OAAO;AAC7C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAElB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMc,MAAM,GAAGf,MAAM,CAAC,CAAC;EAEvB,MAAMgB,OAAO,GAAGA,CAAA,KAAM;IAClBD,MAAM,CAACE,OAAO,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC;IACrDC,OAAO,CAACC,GAAG,CAACL,MAAM,CAAC;IACnBA,MAAM,CAACE,OAAO,CAACI,MAAM,GAAG,MAAM;MAC1B,MAAMC,OAAO,GAAG;QACZC,KAAK,EAAE,YAAY;QACnBV,QAAQ;QACRW,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC;MACjB,CAAC;MACDX,MAAM,CAACE,OAAO,CAACU,IAAI,CAACC,IAAI,CAACC,SAAS,CAACP,OAAO,CAAC,CAAC;MAC5CV,YAAY,CAAC,IAAI,CAAC;MAClBO,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IAC5B,CAAC;IACDL,MAAM,CAACE,OAAO,CAACa,SAAS,GAAIP,KAAK,IAAK;MAClC,MAAMD,OAAO,GAAGM,IAAI,CAACG,KAAK,CAACR,KAAK,CAACS,IAAI,CAAC;MACtCxB,WAAW,CAACyB,IAAI,IAAI,CAACX,OAAO,EAAE,GAAGW,IAAI,CAAC,CAAC;IAC3C,CAAC;IACDlB,MAAM,CAACE,OAAO,CAACiB,OAAO,GAAG,MAAM;MAC3Bf,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC/B,CAAC;IACDL,MAAM,CAACE,OAAO,CAACkB,OAAO,GAAG,MAAM;MAC3BhB,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC/B,CAAC;EACL,CAAC;EAED,MAAMgB,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMlC,KAAK,CAACmC,IAAI,CAAC,oCAAoC,EAAE;MACnDf,OAAO,EAAEb,KAAK;MACde,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC;IACjB,CAAC,CAAC;EACN,CAAC;EAED,IAAI,CAACf,SAAS,EAAE;IACZ,oBACIP,OAAA;MAAKkC,SAAS,EAAC,QAAQ;MAAAC,QAAA,eACnBnC,OAAA;QAAKkC,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACjBnC,OAAA;UACIK,KAAK,EAAEI,QAAS;UAChB2B,QAAQ,EAAEC,CAAC,IAAI3B,WAAW,CAAC2B,CAAC,CAACC,MAAM,CAACjC,KAAK,CAAE;UAC3CkC,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAC9B5C,OAAA;UAAQ6C,OAAO,EAAEjC,OAAQ;UAAAuB,QAAA,EAAC;QAAK;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAEd;EAEA,oBACI5C,OAAA;IAAKkC,SAAS,EAAC,QAAQ;IAAAC,QAAA,eACnBnC,OAAA;MAAAmC,QAAA,gBACInC,OAAA;QAAKkC,SAAS,EAAC,MAAM;QAAAC,QAAA,gBACjBnC,OAAA;UAAOK,KAAK,EAAEA,KAAM;UAAC+B,QAAQ,EAAEC,CAAC,IAAI/B,QAAQ,CAAC+B,CAAC,CAACC,MAAM,CAACjC,KAAK,CAAE;UAACkC,IAAI,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAC3E5C,OAAA;UAAQ6C,OAAO,EAAEb,WAAY;UAAAG,QAAA,EAAC;QAAS;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC,eACN5C,OAAA;QAAKkC,SAAS,EAAC,UAAU;QAAAC,QAAA,EACpBhC,QAAQ,CAAC2C,GAAG,CAACC,IAAI,iBACd/C,OAAA;UAAAmC,QAAA,EACKY,IAAI,CAAC5B,KAAK,KAAK,YAAY,gBACtBnB,OAAA;YAAKkC,SAAS,EAAC,oBAAoB;YAAAC,QAAA,GAAC,2EACrB,EAACY,IAAI,CAACtC,QAAQ,EAAC,qEAChC;UAAA;YAAAgC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,gBACJ5C,OAAA;YAAKkC,SAAS,EAAC,SAAS;YAAAC,QAAA,GACrBY,IAAI,CAACtC,QAAQ,EAAC,IAAE,EAACsC,IAAI,CAAC7B,OAAO;UAAA;YAAAuB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B;QAAC,GAPJG,IAAI,CAAC3B,EAAE;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OASZ,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAC1C,EAAA,CA/EID,OAAO;AAAA+C,EAAA,GAAP/C,OAAO;AAiFb,eAAeA,OAAO;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}